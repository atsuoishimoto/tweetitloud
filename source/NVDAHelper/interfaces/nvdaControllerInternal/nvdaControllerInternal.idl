/*
This file is a part of the NVDA project.
URL: http://www.nvda-project.org/
Copyright 2006-2010 NVDA contributers.
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License version 2.0, as published by
    the Free Software Foundation.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
This license can be found at:
http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
*/

cpp_quote("/*")
cpp_quote("This file is a part of the NVDA project.")
cpp_quote("URL: http://www.nvda-project.org/")
cpp_quote("Copyright 2006-2010 NVDA contributers.")
cpp_quote("This program is free software: you can redistribute it and/or modify")
cpp_quote("it under the terms of the GNU General Public License version 2.0, as published by")
cpp_quote("the Free Software Foundation.")
cpp_quote("This program is distributed in the hope that it will be useful,")
cpp_quote("but WITHOUT ANY WARRANTY; without even the implied warranty of")
cpp_quote("MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.")
cpp_quote("This license can be found at:")
cpp_quote("http://www.gnu.org/licenses/old-licenses/gpl-2.0.html")
cpp_quote("*/")

/**
 * Methods  to control NVDA via NVDA in-process code.
 */
[
	uuid(B8934CDF-D229-40f0-A082-0F60D39F44D7),
	version(1.0),
]
interface NvdaControllerInternal {

/**
 * Notifies NVDA that the keyboard layout has changed for this thread. 
 * @param threadID the thread the layout change occured in
 * @param hkl the current layout retreaved either by GetKeyboardLayout or the lParam of wm_inputLangChange.
 * @param layoutString the current identifier string returned from GetKeyboardLayoutName.
 */
	error_status_t __stdcall inputLangChangeNotify([in] const long threadID, [in] const unsigned long hkl, [in,string] const wchar_t* layoutString);

/**
 * Logs a message at the given level to NVDA
 * @param process Id of the process where the message is sent from
 * @param threadID the thread ID of the thread where the message is coming from
 * @param level the level of the message
 * @param fileName the name of the file where the message was sent
 * @param funcName the full name of the function where the message is coming from 
 * @param lineNo the line number where the message was sent
 * @param message the log message
 */
	error_status_t __stdcall logMessage([in] const long processID, [in] const long threadID, [in] const long level, [in,string] const wchar_t* fileName, [in,string] const wchar_t* funcName, [in] const long lineNo, [in,string] const wchar_t* message);

};
