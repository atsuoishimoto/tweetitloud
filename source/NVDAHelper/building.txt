Build Instructions

Prerequisites:

NVDAHelper needs The Microsoft Windows SDK, version 6.1 or later. You can find it here:
http://msdn.microsoft.com/en-us/windows/bb980924.aspx

 The gecko_ia2 virtual buffer backend requires the IAccessible2 IDL file. You can obtain it here:
http://www.linuxfoundation.org/en/Accessibility/IAccessible2
Download the merged IDL and copy it to ..\include\ia2\ia2.idl.

The adobeAcrobat virtual buffer backend requires the Adobe Acrobat accessibility IDL and header files. This is rather difficult to find, so here is a direct link:
http://www.adobe.com/devnet/acrobat/downloads/ClientFiles.zip
Extract the files into ..\include\AcrobatAccess.

The apiHook module requires MinHook 1.1.0 or later: http://www.codeproject.com/KB/winsdk/LibMinHook.aspx
	* Download the source archive. The file name is something like MinHook_110_src.zip depending on exact version.
	* You will need an account on CodeProject to download from there.
	* extract the source archive, and from it copy the libMinHook directory to NVDA's source/include directory.

minHook (and possibly in future nvdaHelper) depends on the Boost c++ library 1.42 or later:
	* you can download the latest Windows installer from http://www.boostpro.com/download
	* On the components page of the installer, make sure to install all the defaults (what ever is already checked), along with anything else you may wish to have for other projects.
	* So far only boost headers are used, none of the pre-compiled libraries are necessary for nvda/minHook.

The NVDAHelper build is managed by the SCons build system, version 1.3.0 or later: http://www.scons.org/

Building the library:

To build the library and all virtual buffer backends, open a command prompt, cd to the top-level directory of nvdaHelper and run the command scons.
There is no need to use the MSVC environment command prompt, scons will locate what it needs automatically in any standard environment.

By default a version with debugging symbols will be generated. To build a release version, provide release=1 on the command line when running scons:
scons release=1

To install the produced libraries in to your NVDA source directory, run the following command:
scons install
You will need to add release=1 to this command line as well if you want to install a release version.

To build the 64 bit version of the libraries, specify TARGET_ARCH=x86_64 on the command line; e.g.:
scons install release=1 TARGET_ARCH=x86_64
